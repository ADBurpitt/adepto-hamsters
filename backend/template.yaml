AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: API

Parameters:
  UserPoolArn:
    Type: String
  PostsTableName:
    Type: String
  PostsTableArn:
    Type: String

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: nodejs8.10
    Handler: app.lambdaHandler
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      Auth:
        DefaultAuthorizer: Cognito
        Authorizers:
          Cognito:
            UserPoolArn: !Ref UserPoolArn

  LambdaPostsTableRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: "CodePipelineAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "dynamodb:*"
                Resource: !Ref PostsTableArn
              - Effect: "Allow"
                Action: "logs:*"
                Resource: "*"

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/hello-world/
      # Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref RestApi
            Path: /hello
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
  
  GetPostsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get-posts/
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /posts
            Method: GET
      Environment: 
        Variables:
          TABLE_NAME: !Ref PostsTableName
      Role: !GetAtt LambdaPostsTableRole.Arn

  CreatePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/create-post/
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /posts
            Method: PUT
      Environment: 
        Variables:
          TABLE_NAME: !Ref PostsTableName
      Role: !GetAtt LambdaPostsTableRole.Arn

Outputs:
  HelloWorldAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  HelloWorldFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn

  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

  RestApiId:
    Description: "Serverless rest api ID"
    Value: !Ref RestApi